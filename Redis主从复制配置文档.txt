			
五大数据类型：
		string
				底层采用json序列化方式存储对象
				例如：
				client.Set("user",userInfo);
		hash
				将对象分段存储
				例如：
					client.SetEntryInHash("user","Id","1");
					client.SetEntryInHash("user","Name","lm");
		list
				包含“队列”和“栈”
		
		set
				无序集合
		sortset
				有序集合

主从复制：
		修改配置文件：
			主服务器配置：
				1、配置主服务器的IP。 
						bind 对外的IP地址 
			从服务器配置：
				1、配置从服务器的端口号和ip
						配置端口：
							port 6381  
						配置IP：
							bind 对外的IP地址 
						
						设置主服务器为（IP加端口号）
							slaveof 127.0.0.1 6379
		
		
持久化机制：
			数据快照：
				数据快照的原理是将整个Redis内存中的所有数据遍历一遍存储到一个扩展名为.rdb的数据文件中，通过 save 命令可以调用这个过程。
				配置如下：
					save 900 1
					save 300 10
					save 60 10000
					以上在Redis.cof中的配置指出在多长时间内，有多少次更新操作，就将数据同步导数据文件中，可以多个条件一起配，第一句的含义是：900秒中有一个key发生改变或者新增一个key，那么900过后将会写入一次。第二第三亦同
				缺点：
					数据快照的缺点是持久化之后如果出现系统挂掉则会丢失一段数据。因此，增加了另一种追加式的操作日志记录。
			aof日志：在cof文件中配置，appendonly yes
				方案
				Appendfsync
							no	等操作系统进行数据缓存时同步，性能最好
							Everysec  每秒同步一次
							Always	每次同步一次，性能最差
			注：主从复制时，关闭主服务器的持久化，关闭aof日志
			
		